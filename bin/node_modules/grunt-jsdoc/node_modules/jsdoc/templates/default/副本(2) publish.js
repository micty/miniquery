

var data = function () {
    var iAPI,
        context;

    iAPI = TAFFY.mergeObj(TAFFY.mergeObj(API, {
        insert: undefined
    }), {
        getDBI: function () {
            return DBI;
        },

        getroot: function (c) {
            return root.call(c);
        },

        context: function (n) {
            if (n) {
                context = TAFFY.mergeObj(context, n.hasOwnProperty("results") ? TAFFY.mergeObj(n, {
                    run: new Date(),
                    sort: new Date()
                }) : n);
            }
            return context;
        }, extend: undefined
    });

    context = (this && this.q) ? this : {
        limit: false,
        start: false,
        q: [],
        filterRaw: [],
        index: [],
        order: [],
        results: false,
        run: null,
        sort: null,
        settings: settings
    };

    each(arguments, function (f) {
        if (isIndexable(f)) {
            context.index.push(f);
        } else {
            context.q.push(returnFilter(f));
        }
        context.filterRaw.push(f);
    });
    return iAPI;
}